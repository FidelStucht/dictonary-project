{"ast":null,"code":"var _jsxFileName = \"/Users/fidelis/Documents/GitHub/Neuer Ordner/dictonary-project/src/Dictonary.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Dictonary.css\";\nimport axios from \"axios\";\nimport Results from \"./Photos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dictonary(props) {\n  _s();\n  let [keyword, setKeyword] = useState(\"sun\");\n  let [results, setResults] = useState(null);\n  let [loaded, setLoaded] = useState(false);\n  function handleResponse(response) {\n    setResults(response.data[0]);\n  }\n  function handlePexelsResponse(response) {\n    setPhotos(response.data.photos);\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n  function search() {\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en_US/${keyword}`;\n    axios.get(apiUrl).then(handleResponse);\n    let pexelsApiKey = \"BUr56bxTrtxl7nYJ7yF4ZQjMQTEBGpdfTteBaiBTnzD3pxykdsspWN6d\";\n    let pexelsApiUrl = `https://api.pexels.com/v1/search?query=${keyword}&per_page=9`;\n    let headers = {\n      Authorization: `Bearer ${pexelsApiKey}`\n    };\n    axios.get(pexelsApiUrl, {\n      headers: headers\n    }).then(handlePexelsResponse);\n  }\n  function handleKeywordChange(event) {\n    setKeyword(event.target.value);\n  }\n  function load() {\n    setLoaded(true);\n    search();\n  }\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Dictonary\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"What word do you want to look up?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            onChange: handleKeywordChange,\n            defaultValue: props.defaultKeyword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hint\",\n          children: \"suggested words: natural, sunset, yoga,...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Results, {\n        results: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Photos, {\n        photos: photos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  } else {\n    load();\n    return \"Loading\";\n  }\n}\n_s(Dictonary, \"C3KgVY1ikxCtswBIXkTPlp4KKy8=\");\n_c = Dictonary;\nvar _c;\n$RefreshReg$(_c, \"Dictonary\");","map":{"version":3,"names":["React","useState","axios","Results","jsxDEV","_jsxDEV","Dictonary","props","_s","keyword","setKeyword","results","setResults","loaded","setLoaded","handleResponse","response","data","handlePexelsResponse","setPhotos","photos","handleSubmit","event","preventDefault","search","apiUrl","get","then","pexelsApiKey","pexelsApiUrl","headers","Authorization","handleKeywordChange","target","value","load","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","defaultValue","defaultKeyword","Photos","_c","$RefreshReg$"],"sources":["/Users/fidelis/Documents/GitHub/Neuer Ordner/dictonary-project/src/Dictonary.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Dictonary.css\";\nimport axios from \"axios\";\nimport Results from \"./Photos\";\n\nexport default function Dictonary(props) {\n  let [keyword, setKeyword] = useState(\"sun\");\n  let [results, setResults] = useState(null);\n  let [loaded, setLoaded] = useState(false);\n\n  function handleResponse(response) {\n    setResults(response.data[0]);\n  }\n  function handlePexelsResponse(response) {\n    setPhotos(response.data.photos);\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n  function search() {\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en_US/${keyword}`;\n    axios.get(apiUrl).then(handleResponse);\n\n    let pexelsApiKey =\n      \"BUr56bxTrtxl7nYJ7yF4ZQjMQTEBGpdfTteBaiBTnzD3pxykdsspWN6d\";\n    let pexelsApiUrl = `https://api.pexels.com/v1/search?query=${keyword}&per_page=9`;\n    let headers = { Authorization: `Bearer ${pexelsApiKey}` };\n    axios.get(pexelsApiUrl, { headers: headers }).then(handlePexelsResponse);\n  }\n\n  function handleKeywordChange(event) {\n    setKeyword(event.target.value);\n  }\n  function load() {\n    setLoaded(true);\n    search();\n  }\n  if (loaded) {\n    return (\n      <div className=\"Dictonary\">\n        <section>\n          <h1>What word do you want to look up?</h1>\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"search\"\n              onChange={handleKeywordChange}\n              defaultValue={props.defaultKeyword}\n            />\n          </form>\n          <div className=\"hint\">suggested words: natural, sunset, yoga,...</div>\n        </section>\n\n        <Results results={results} />\n        <Photos photos={photos} />\n      </div>\n    );\n  } else {\n    load();\n    return \"Loading\";\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}